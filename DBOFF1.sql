-- MySQL Script generated by MySQL Workbench
-- Wed Jul 22 23:07:14 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema DBOFF1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DBOFF1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DBOFF1` DEFAULT CHARACTER SET utf8 ;
USE `DBOFF1` ;

-- -----------------------------------------------------
-- Table `DBOFF1`.`Brands`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Brands` (
  `brands_id` INT NOT NULL AUTO_INCREMENT,
  `brands` VARCHAR(75) NOT NULL,
  PRIMARY KEY (`brands_id`));


-- -----------------------------------------------------
-- Table `DBOFF1`.`Nutriscore_grades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Nutriscore_grades` (
  `nutriscore_grade_id` TINYINT NOT NULL AUTO_INCREMENT,
  `nutriscore_grade` CHAR(1) NOT NULL,
  PRIMARY KEY (`nutriscore_grade_id`));


-- -----------------------------------------------------
-- Table `DBOFF1`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Products` (
  `products_id` INT NOT NULL AUTO_INCREMENT,
  `Codes_products_OFF_id` INT NOT NULL,
  `product_name_fr` VARCHAR(100) NOT NULL,
  `url` VARCHAR(150) NOT NULL,
  `Brands_brands_id` INT NOT NULL,
  `Nutriscore_grade_nutriscore_grade_id` TINYINT NOT NULL,
  PRIMARY KEY (`products_id`, `Codes_products_OFF_id`, `Brands_brands_id`, `Nutriscore_grade_nutriscore_grade_id`),
  INDEX `fk_Products_Brands1_idx` (`Brands_brands_id` ASC) VISIBLE,
  INDEX `fk_Products_Nutriscore_grade1_idx` (`Nutriscore_grade_nutriscore_grade_id` ASC) VISIBLE,
  CONSTRAINT `fk_Products_Brands1`
    FOREIGN KEY (`Brands_brands_id`)
    REFERENCES `DBOFF1`.`Brands` (`brands_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Products_Nutriscore_grade1`
    FOREIGN KEY (`Nutriscore_grade_nutriscore_grade_id`)
    REFERENCES `DBOFF1`.`Nutriscore_grades` (`nutriscore_grade_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `DBOFF1`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(25) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`));


-- -----------------------------------------------------
-- Table `DBOFF1`.`Searches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Searches` (
  `searches_id` INT NOT NULL AUTO_INCREMENT,
  `create_time` TIMESTAMP NULL,
  `Users_user_id` INT NOT NULL,
  `Products_code` INT NOT NULL,
  PRIMARY KEY (`searches_id`, `Users_user_id`, `Products_code`),
  INDEX `fk_Searches_Users_idx` (`Users_user_id` ASC) VISIBLE,
  INDEX `fk_Searches_Products1_idx` (`Products_code` ASC) VISIBLE,
  CONSTRAINT `fk_Searches_Users`
    FOREIGN KEY (`Users_user_id`)
    REFERENCES `DBOFF1`.`Users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Searches_Products1`
    FOREIGN KEY (`Products_code`)
    REFERENCES `DBOFF1`.`Products` (`products_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `DBOFF1`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Categories` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `categories` VARCHAR(75) NOT NULL,
  `Categories_parent_category_id` INT NOT NULL,
  PRIMARY KEY (`category_id`),
  INDEX `fk_Categories_Categories1_idx` (`Categories_parent_category_id` ASC) VISIBLE,
  CONSTRAINT `fk_Categories_Categories1`
    FOREIGN KEY (`Categories_parent_category_id`)
    REFERENCES `DBOFF1`.`Categories` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `DBOFF1`.`Searches_saved`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Searches_saved` (
  `searches_saved_id` INT NOT NULL AUTO_INCREMENT,
  `Users_user_id` INT NOT NULL,
  `Products_code` INT NOT NULL,
  PRIMARY KEY (`searches_saved_id`, `Users_user_id`, `Products_code`),
  INDEX `fk_Searches_saved_Users1_idx` (`Users_user_id` ASC) VISIBLE,
  INDEX `fk_Searches_saved_Products1_idx` (`Products_code` ASC) VISIBLE,
  CONSTRAINT `fk_Searches_saved_Users1`
    FOREIGN KEY (`Users_user_id`)
    REFERENCES `DBOFF1`.`Users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Searches_saved_Products1`
    FOREIGN KEY (`Products_code`)
    REFERENCES `DBOFF1`.`Products` (`products_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `DBOFF1`.`Stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Stores` (
  `stores_id` INT NOT NULL AUTO_INCREMENT,
  `stores` VARCHAR(75) NOT NULL,
  PRIMARY KEY (`stores_id`));


-- -----------------------------------------------------
-- Table `DBOFF1`.`Codes_products_OFF`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Codes_products_OFF` (
  `Codes_products_OFF_id` INT NOT NULL AUTO_INCREMENT,
  `Products_products_id` INT NOT NULL,
  `code` BIGINT NOT NULL,
  PRIMARY KEY (`Codes_products_OFF_id`, `Products_products_id`),
  INDEX `fk_Products_codes_Products1_idx` (`Products_products_id` ASC) VISIBLE,
  CONSTRAINT `fk_Products_codes_Products1`
    FOREIGN KEY (`Products_products_id`)
    REFERENCES `DBOFF1`.`Products` (`products_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `DBOFF1`.`Products_has_Stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Products_has_Stores` (
  `Products_products_id` INT NOT NULL,
  `Stores_stores_id` INT NOT NULL,
  PRIMARY KEY (`Products_products_id`, `Stores_stores_id`),
  INDEX `fk_Products_has_Stores_Stores1_idx` (`Stores_stores_id` ASC) VISIBLE,
  INDEX `fk_Products_has_Stores_Products1_idx` (`Products_products_id` ASC) VISIBLE,
  CONSTRAINT `fk_Products_has_Stores_Products1`
    FOREIGN KEY (`Products_products_id`)
    REFERENCES `DBOFF1`.`Products` (`products_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Products_has_Stores_Stores1`
    FOREIGN KEY (`Stores_stores_id`)
    REFERENCES `DBOFF1`.`Stores` (`stores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `DBOFF1`.`Products_has_Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBOFF1`.`Products_has_Categories` (
  `Products_products_id` INT NOT NULL,
  `Categories_category_id` INT NOT NULL,
  PRIMARY KEY (`Products_products_id`, `Categories_category_id`),
  INDEX `fk_Products_has_Categories_Categories1_idx` (`Categories_category_id` ASC) VISIBLE,
  INDEX `fk_Products_has_Categories_Products1_idx` (`Products_products_id` ASC) VISIBLE,
  CONSTRAINT `fk_Products_has_Categories_Products1`
    FOREIGN KEY (`Products_products_id`)
    REFERENCES `DBOFF1`.`Products` (`products_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Products_has_Categories_Categories1`
    FOREIGN KEY (`Categories_category_id`)
    REFERENCES `DBOFF1`.`Categories` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
